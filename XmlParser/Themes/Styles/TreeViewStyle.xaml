<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:XmlParser.Controls"
                    xmlns:local="clr-namespace:XmlParser">

    <local:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
    <local:EnumTypeToItemSourceConverter x:Key="enumTypeToItemsSourceConverter"/>
    <local:XmlParseNodeCollectionToToolTipConverter x:Key="xmlParseNodeCollectionToToolTipConverter"/>
    <local:ObjectToStringConverter x:Key="objectToStringConverter"/>
    <local:OnlyOneTreeViewItemConverter x:Key="onlyOneTreeViewItemToBoolConverter"/>
    <local:LastTreeViewItemConverter x:Key="lastTreeViewItemToBoolConverter"/>
    <local:BoolAndBoolToVisibilityMultiConverter x:Key="boolAndBoolToVisibilityMultiConverter"/>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Rectangle Width="11" Height="11" Stroke="#919191" SnapsToDevicePixels="true" Fill="White"/>
                        <Rectangle x:Name="ExpandPath" Width="1" Height="7" Stroke="Black" SnapsToDevicePixels="true"/>
                        <Rectangle Width="7" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="XmlParseNodeTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="#004080"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
        <Setter Property="Visibility">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource boolAndBoolToVisibilityMultiConverter}">
                    <Binding Path="IsVisible"/>
                    <Binding Path="FilterVisible"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Path Grid.Column="1" Grid.RowSpan="2" Height="1" Data="M0,0 H1" Stroke="Black" Stretch="Fill" RenderOptions.EdgeMode="Aliased" StrokeThickness="1" StrokeDashArray="1,1"/>
                            <Path x:Name="TopVerLine"  Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2" Width="1" Data="M0,0 V1" Stroke="Black" Stretch="Fill" RenderOptions.EdgeMode="Aliased" StrokeThickness="1" StrokeDashArray="1,1"/>
                        </Grid>

                        <Path x:Name="MiddleVerLine" Grid.Row="1" Width="1" Margin="0,-1" Stretch="Fill" Data="M0,0 V1" Stroke="Black" StrokeThickness="1" RenderOptions.EdgeMode="Aliased" StrokeDashArray="1,1"/>

                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>

                        <Border x:Name="Bd"  Grid.Column="1" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"
                                    ToolTip="{Binding NodeCollection,Converter={StaticResource xmlParseNodeCollectionToToolTipConverter}}">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource onlyOneTreeViewItemToBoolConverter}}" Value="true"/>
                                <Condition Binding="{Binding IsRoot}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="TopVerLine" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MiddleVerLine" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource onlyOneTreeViewItemToBoolConverter}}" Value="true"/>
                                <Condition Binding="{Binding IsRoot}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="TopVerLine" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="MiddleVerLine" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>


                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource lastTreeViewItemToBoolConverter}}" Value="true">
                            <Setter TargetName="TopVerLine" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="MiddleVerLine" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>


                        <DataTrigger Binding="{Binding IsAttribute}" Value="true">
                            <Setter Property="Foreground" Value="#800000"/>
                        </DataTrigger>

                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="XmlParseNodeValueTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="#800000"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=OneWay}"/>
        <Setter Property="Visibility">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource boolAndBoolToVisibilityMultiConverter}">
                    <Binding Path="IsVisible"/>
                    <Binding Path="FilterVisible"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Bd" Grid.ColumnSpan="2" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding HasValue}" Value="false">
                            <Setter Property="Visibility" TargetName="PART_Header" Value="Hidden"/>
                            <Setter Property="IsHitTestVisible" TargetName="Bd" Value="false"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding HasValue}" Value="true">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="IsHitTestVisible" TargetName="Bd" Value="true"/>
                        </DataTrigger>

                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <HierarchicalDataTemplate x:Key="XmlParseStringDataTemplate" ItemsSource="{Binding NodeCollection}">
        <controls:PopupTextBox VerticalContentAlignment="Center"
                               Text="{Binding Value,Converter={StaticResource objectToStringConverter}}"
                               Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                               IsHitTestVisible="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                               />
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="XmlParseEnumDataTemplate" ItemsSource="{Binding NodeCollection}">
        <ComboBox VerticalContentAlignment="Center" Margin="0,1"
                  SelectedItem="{Binding Value,Mode=TwoWay}" 
                  ItemsSource="{Binding ValueType,Converter={StaticResource enumTypeToItemsSourceConverter}}"
                  />
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="XmlParseBoolDataTemplate" ItemsSource="{Binding NodeCollection}">
        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Left"
                  IsChecked="{Binding Value,Mode=TwoWay}"
                  />
    </HierarchicalDataTemplate>
    
</ResourceDictionary>